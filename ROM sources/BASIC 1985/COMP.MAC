.ENABLE LC
.GLOBL	ZONA,LIT,TAB,AT,LOCX,LOCY,LOC,GETARR,PLMI,PRSPEC,LMID,ERRS	;SPC
.GLOBL	IOUTSP,SOUTSP,DOUTSP,IFT,IFF,FORDBL,FORINT,SETST,PNTSAV,STACK
.GLOBL	NXSKIP,NEXINT,NEXDBL,NEXSNG,NEXCMP,NEXJMP,LIMIT,AUTOON
.GLOBL	HALT,NUMBER,DMOV,SMOV,IMOV,JMP,JSR,RTS,RTSTO,BEEP0	;BEEP1,BEEP2
.GLOBL	DCONST,ICONST,DXMOV,SXMOV,IXMOV,$XMOV,FCB,DATPTR,SEPAP
.GLOBL	GET,GETLIT,CLR,CLRSTR,CLRMEM,ENDCOD,TRUN,TREND,ADRHLT
.GLOBL	DVAR,SVAR,IVAR,TYPE,CINT,CDBL,CSNG,READV,PFACT,ASTAR
.GLOBL	ENDPRG,STAR,LENT,TABTOP,NEWLIN,LYGIS,POKJMP,OUTJMP,TMP,$SQUEE
.GLOBL	COLR,COLF,JCLS,SET,RESET,COLRET,LSTP,LSET,RECSET,BOXSET
.GLOBL	SPFORM,RSP,VIDSP,$PAINT,STP,CURCOR,USRTAB,$DEFUS,STRSIZ
.GLOBL	AOPSUB,AOPMON,OPRNAM,MIDMOV,NEWSTR,$KEY;KEYISV,KEYON,KEYOFF
.GLOBL	ONJSR,ONJMP,OPFOR,OPINP,OPOUT,CLOFIL,DEVICE,CLRDEV,DEVLP
.GLOBL	ANG1,ANG01,ANG2,ANG02,ASPINT,ASPDBL,ASPSNG,ASP0,$ARC
.GLOBL	INIPRP,USEROM,DFN,IFNRET,SFNRET,DFNRET,DATBEG,RESTV
;.GLOBL	SWPD,SWPR,SWPI,SWSSI,SWSIS,SWSII
;.GLOBL	$ERASE,APRL
;.GLOBL	MTONV,MTOFFV
.GLOBL	$DRAW
;
LPRINT::MOV	#DEVLP,(R1)
	MOV	(R1)+,-(SP)
	BR	PRI
;
PRINT::	JSR	R2,TSTFLN
PRI:	CLR	-(SP)
PR:	TRAP	122
	BR	10$
	CLR	TMP
	MOV	#LIT,(R1)+
	CLR	@SP
	BR	PR
10$:	TRAP	112
	TRAP	102
	BR	59$
	BR	1$
2$:	TRAP	100
	CLR	@SP
	MOVB	TYPE,R4
	INC	R4
	ASL	R4
	MOV	AOUTSP(R4),(R1)+
	BR	PR
1$:	MOV	R3,R2
	TRAP	113
	.WORD	RWPRIN,3003
	BR	2$
	SUB	#4,R5
	BLT	77$
	CLR	@SP
	TRAP	127
	MOV	R5,R2
	TRAP	125
	TST	R2
	BNE	5$
	TRAP	126
	TRAP	125
5$:	TRAP	130
	MOV	AFNPOZ(R2),(R1)+
	BR	PR
59$:	TRAP	101
	.WORD	PRSPEC
	BR	58$
	BR	57$
58$:	TRAP	101
	.WORD	PLMI
	BR	6$
57$:	DEC	R3
	BR	2$
6$:	CMPB	@R3,#';
	BEQ	7$
	CMPB	@R3,#',
	BNE	8$
	MOV	#ZONA,(R1)+
7$:	INC	@SP
	INC	R3
	BR	PR
77$:	MOV	R2,R3
	CMP	R5,#-2
	BEQ	2$
8$:	TRAP	106
	TST	(SP)+
	BNE	88$
	MOV	#NEWLIN,(R1)+
88$:	JSR	R2,TSTFIL
REM::	RETURN
;
AFNPOZ:	.WORD	AT,TAB;SPC
AOUTSP:	.WORD	IOUTSP,DOUTSP,SOUTSP
;
LOCATE::CMPB	@R3,#',
	BEQ	1$
	TRAP	125
11$:	TRAP	116
	BR	2$
	CALL	CINT
	MOV	#AT,(R1)+
21$:	TRAP	116
	BR	3$
	CALL	CINT
	MOV	#LOC,(R1)+
	BR	CEND1
;
1$:	MOV	#LOCX,(R1)+
	BR	11$
2$:	MOV	#TAB,(R1)+
	CMPB	(R3),#',
	BNE	CEND1
	INC	R3
	CMPB	(R3),#',
	BEQ	21$
	TRAP	24.
3$:	CMPB	(R3),#',
	BNE	CEND1
	TRAP	24.
;
LET::	CLR	R2
	CLR	R4
	TRAP	107
	BR	10$
	CMP	(R2)+,(R2)+
	TSTB	TYPE
	BEQ	11$
	BMI	1$
	TST	(R2)+
11$:	TST	(R2)+
1$:	TSTB	R5
	BMI	15$
	MOV	R4,-(SP)
	BR	2$
10$:	TST	R5
	BNE	11$
	CALL	TSTSQZ
	TST	-(R1)
	CALL	LMID
	MOV	#-1,R5
15$:	NEG	R2
2$:	TRAP	112
	CMPB	(R3)+,#'=
	BNE	5$
	TST	R5
	BPL	22$
	TRAP	115
	TRAP	13.
	TST	R4
	BGT	33$
	BMI	3$
	TST	R2
	BEQ	33$
3$:	CALL	TSTSQZ
	BR	33$
22$:	TRAP	100
	MOV	R2,R4
	BPL	20$
	NEG	R4
20$:	CALL	@ATCONV-4(R4)
33$:	MOV	AMOV(R2),(R1)+
	TST	R2
	BLE	CEND1
	MOV	(SP)+,(R1)+
	BR	CEND1
5$:	TRAP	2
;
	.WORD					SXMOV	;-10
	.WORD				DXMOV		;-6
	.WORD			IXMOV			;-4
	.WORD		$XMOV				;-2
AMOV:	.WORD	MIDMOV					; 0
	.WORD		SMOV				;+2
	.WORD			IMOV			;+4
	.WORD				DMOV		;+6
	.WORD					SMOV	;+10
;
ATCONV::.WORD			CINT,	CDBL,	CSNG
;
TSTSQZ::TST	TMP
	BNE	1$
	MOV	#$SQUEE,(R1)+
	INC	TMP
1$:	MOV	#NEWSTR,(R1)+
	RETURN
;
RET::	TRAP	110
	BR	1$
	MOV	#RTSTO,(R1)+
	BR	TO1
1$:	MOV	#RTS,(R1)+
	CALL	TSTLYG
CEND1:	TRAP	106
	RETURN
;
GOSUB::	MOV	#JSR,(R1)+
	BR	TO
;
GO::	MOV	#JMP,(R1)+
;
TO:	TRAP	110
	TRAP	2
TO1:	TRAP	106
	TRAP	111
	BR	2$
	TRAP	8.
2$:	CALL	TSTLYG
	JSR	R0,SETST
	BR	5$
	MOV	#TOTO1,(1)+
	RETURN
5$:	MOV	@R4,@R1
	CMP	4(R4),NUMBER
	BLOS	1$
	MOV	R1,@R4
1$:	TST	(R1)+
	RETURN
TOTO1:	.WORD	ENDPRG
;
TSTLYG:	TSTB	LYGIS
	BNE	1$
	TST	ERRS
	BNE	2$
    	CLR	ADRHLT
1$:	RETURN
2$:	TRAP	17.
;
RWREN::	.ASCII	/REM /
	.ASCII	/RETURN /
	.ASCII	/NEXT /
	.ASCII	/RESTORE /
RWON:	.ASCII	/GOSUB /
RWIF:	.ASCII	/GOTO /
	.ASCII	/THEN /
	.ASCII	/ELSE /
RWPRIN:	.ASCII	/EL /
	.ASCII	/ATN /
	.ASCII	/AT /
	.ASCII	/TAB /
;	.ASCII	/SPC /
RWFOR:	.ASCII	/TO /
	.ASCII	/STEP /
RWOPEN:	.ASCII	/OUTPUT INPUT /
	.ASCII	/AS /
RWDEF:	.ASCII	/USR /
	.ASCII	/FN /
;	.ASCII	/STR /
;	.ASCII	/SNG /
;	.ASCII	/DBL /
;	.ASCII	/INT /
;RWKEY:	.ASCII	/LIST /
;RWMOT:	.ASCII	/ON /
;	.ASCII	/OFF /
RWLINE:	.ASCII	/B BF /
	.EVEN
;
IF::	TRAP	100
	CALL	CINT
	TRAP	113	;THEN,GOTO?
	.WORD	RWIF,1002
	TRAP	2
	TRAP	102
	BR	6$
	BR	6$
	MOV	#IFT,(R1)+	;THEN <LINE NUMBER>
	MOV	R0,-(SP)
	CLR	R0
	CALL	TO
	CLR	-(SP)
	BR	5$
6$:	MOV	#IFF,(R1)+	;THEN	<STATMENT>
	MOV	R0,-(SP)
	MOV	R1,-(SP)
	TRAP	113
	.WORD	OPRNAM
	.BYTE	2,AOPMON-AOPSUB-2
	CLR	R5
	TST	(R1)+
	CLR	R0
	CALL	@AOPSUB(R5)
	CLR	R2
5$:	TRAP	113
	.WORD	RWIF+12,2	;ELSE?
	BR	62$
	TRAP	102
	BR	50$
	BR	50$
	MOV	#22,R5
	BR	55$
50$:	TRAP	113
	.WORD	OPRNAM
	.BYTE	2,AOPMON-AOPSUB-2
	CLR	R5
55$:	TST	@SP
	BEQ	4$
	MOV	#JMP,(R1)+
	MOV	R1,R2
	TST	(R1)+
	MOV	R1,@(SP)+
	MOV	R2,-(SP)
4$:	CALL	@AOPSUB(R5)
62$:	MOV	(SP)+,R0
	BEQ	7$
	MOV	R1,@R0
7$:	MOV	(SP)+,R0
	JMP	CEND
;
.IF EQ,1
MOTOR::	TRAP	113
	.WORD	RWMOT
	.BYTE	2,2
	TRAP	2
	TST	R5
	BNE	1$
	MOV	#MTONV,(1)+
	BR	2$
1$:	MOV	#MTOFFV,(1)+
2$:	BR	CEND
.ENDC
;
FOR::	CLR	R4
	TRAP	107
	TRAP	13.
	TSTB	R5
	BMI	SYNERR
	TRAP	112
	CMPB	(R3)+,#'=
	BNE	SYNERR
	MOV	R4,-(SP)
	MOVB	TYPE,R2
	INC	R2
	ASL	R2
	TRAP	100
	CALL	@ATCONV(R2)
	MOV	AMOV+4(R2),(R1)+
	MOV	@SP,(R1)+
	TRAP	113
	.WORD	RWFOR,2
	TRAP	2
	TRAP	100
	CMP	R2,#4
	BNE	10$
	TST	-(R2)
10$:	CALL	@ATCONV(R2)
	TRAP	113
	.WORD	RWFOR+3,2
	BR	2$
	TRAP	100
	CALL	@ATCONV(R2)
1$:	MOV	AFOR(R2),(R1)+
	MOV	#ASTAR+2,(R1)+
	MOV	(SP)+,(R1)+
	TSTB	LYGIS
	BEQ	CEND
	MOV	R1,-4(R1)
	BR	CEND
2$:	TST	R2
	BEQ	3$
	MOV	#DCONST,(R1)+
	CLR	(R1)+
	CLR	(R1)+
	CLR	(R1)+
	MOV	#40200,(R1)+
	BR	1$
3$:	MOV	#ICONST,(R1)+
	MOV	#1,(R1)+
	BR	1$
SYNERR:	TRAP	2
;
AFOR:	.WORD	FORINT,FORDBL
;
NEXT::	MOV	#NXSKIP,(R1)+
	CLR	R4
	MOV	#1,TYPE
	CMPB	@R3,#12
	BEQ	1$
	TRAP	107
	TRAP	13.
	TSTB	R5
	BMI	SYNERR
1$:	MOV	R4,(R1)+
	MOVB	TYPE,R2
	INC	R2
	ASL	R2
	MOV	ANXADD(R2),(R1)+
	SUB	#2,R2
	BLT	2$
	MOV	#NEXCMP,(R1)+
	MOV	#NEXJMP,(R1)+
2$:	TRAP	112
	CMPB	(R3)+,#',
	BEQ	NEXT
	DEC	R3
	BR	CEND
;
ANXADD:	.WORD	NEXINT,NEXDBL,NEXSNG
;
STOP::	MOV	#HALT,(R1)+
	BR	CEND
;
END::	MOV	#ENDPRG,(R1)+
	BR	CEND
;
TRON::	ÍOV	#TRUN,(R1)+
	BR	CEND
;
TROFF::	MOV	#TREND,(R1)+
CEND:	TRAP	106
	RETURN
;
DATA::	MOV	R0,@DATPTR
	MOV	R0,DATPTR
	RETURN
;
RESTOR::TSTB	LYGIS
	BEQ	3$
	MOV	AUTOON,(1)+
	MOV	R1,AUTOON
	TRAP 	110
	BR	1$
	TRAP	111
	BR	2$
	TRAP	8.
1$:	MOV	FCB,R4
	TST	-(4)
2$:	TST	-(4)
	MOV	R4,(1)+
	BR	CEND
3$:	TST	ERRS
	BNE	5$
	MOV	#RESTV,(R1)+
	MOV	DATBEG,(R1)+
	TRAP	110
	BR	CEND
	TRAP	111
	BR	4$
	TRAP	8.
4$:	MOV	-4(R4),-2(R1)
	BR	CEND
5$:	TRAP	4
;
READ::	MOV	#$SQUEE,(R1)+
	MOV	#READV,(1)+
	CLR	-(SP)
	BR	INPENT
;
INPUT::	MOV	#$SQUEE,(R1)+
	TRAP	120
	BR	10$
	MOV	#LIT,(R1)+
	TRAP	112
	CMPB	(R3)+,#';
	BNE	SYNERR
	TRAP	112
	MOV	#GETLIT,(R1)+
	CLR	-(SP)
	BR	INPENT
10$:	JSR	R2,TSTFLN
	MOV	#GET,(R1)+
INPENT:	MOV	R1,-(SP)
	TST	(R1)+
1$:	CLR	R4
	MOV	R1,-(SP)
	TST	(R1)+
	TRAP	107
	NOP
	TSTB	R5
	BMI	2$
	TST	R5
	BEQ	4$
	MOV	R4,@(SP)+
3$:	TRAP	112
	CMPB	(R3)+,#',
	BEQ	1$
	MOV	R1,@(SP)+
	DEC	R3
	JSR	R2,TSTFIL
	BR	CEND
2$:	MOV	#GETARR,(R1)+
	MOV	R1,@(SP)+
	BR	3$
4$:	TRAP	2
;
CLEAR::	CMPB	@R3,#12
	BEQ	1$
	CMPB	@R3,#',
	BNE	3$
	MOV	#IVAR,(R1)+
	MOV	#STRSIZ,(R1)+
	BR	4$
3$:	TRAP	125
4$:	TRAP	116
	BR	2$
	CALL	CINT
	MOV	#CLRMEM,(R1)+
	BR	CEND
2$:	MOV	#CLRSTR,(R1)+
	BR	CEND
1$:	MOV	#CLR,(R1)+
	BR	CEND
;
DIM::	MOV	#10,R4
	TRAP	107
	NOP
1$:	TST	R5
	BEQ	4$
	TRAP	112
	CMPB	(R3)+,#',
	BNE	2$
	TSTB	LYGIS
	BNE	DIM
	TRAP	12.
2$:	DEC	R3
	BR	CEND2
4$:	TRAP	2
.IF EQ,1
;
ERASE::	MOV	#$ERASE,(R1)+
	CLR	R2
5$:	TRAP	112
	TRAP	102
	BR	1$
	BR	2$
6$:	TRAP	2
2$:	TRAP	105
	TRAP	5
	TRAP	5
	NOP
	CLR	R2
	BIS	#200,R5
	TRAP	104
	MOV	R4,(R1)+
	TRAP	112
	CMPB	@R3,#',
	BNE	1$
	INC	R3
	INC	R2
	BR	5$
1$:	TST	R2
	BNE	6$
	CLR	(R1)+
	BR	CEND2
.ENDC
;
POKE::	TRAP	124
	MOV	#POKJMP,(R1)+
CEND2:	TRAP	106
	RETURN
;
OUT::	TRAP	123
	MOV	#OUTJMP,(R1)+
	BR	CEND2
;
COLOR::	CLR	R2
	CMPB	#',,(R3)
	BEQ	1$
	INC	R2
	TRAP	125
1$:	TRAP	116
	BR	2$
	CALL	CINT
;	MOV	#SPFORM,(R1)+
	MOV	#COLF,(R1)+
2$:	TST	R2
	BEQ	CEND2
;	MOV	#SPFORM,(R1)+
	MOV	#COLR,(R1)+
	BR	CEND2
;
BEEP::;	CLR	R2
;	CMPB	@R3,#12
;	BEQ	1$
;	TST	(R2)+
;	TRAP	125
;	TRAP	116
;	TST	(R2)+
;	CALL	CINT
1$:	MOV	#BEEP0,(R1)+	;	ABEEP(R2),(R1)+
	BR	CEND2
;
;ABEEP:	.WORD	BEEP0,	BEEP2,	BEEP1
;
CLS::	MOV	#JCLS,(R1)+
	BR	CEND2
;
PSET::	CLR	R2
	BR	PNT
PRESET::MOV	#2,R2
PNT:	CALL	KOORD
	TRAP	116
	BR	6$
	CALL	CINT
;	MOV	#SPFORM,(R1)+
	MOV	#COLR,(R1)+
	MOV	#SET,(R1)+
	MOV	#COLRET,(R1)+
	BR	7$
6$:	MOV	APOINT(R2),(R1)+
7$:	TRAP	106
	RETURN
APOINT:	.WORD	SET,RESET
;
LINE::	CMPB	(R3),#'-
	BEQ	1$
	CALL	KOORD
	BR	2$
1$:	MOV	#CURCOR,(R1)+
2$:	CMPB	(R3)+,#'-
	BNE	SYNER3
	TRAP	112
	CALL	KOORD
	TST	R4
	BEQ	4$
	MOV	#LSTP,-2(R1)
4$:	CLR	R2
	TRAP	116
	BR	5$
	CALL	CINT
;	MOV	#SPFORM,(R1)+
	MOV	#COLR,(R1)+
	BR	6$
5$:	INC	R2
	CMPB	(R3),#',
	BNE	L7
	INC	R3
	TRAP	112
6$:	CMPB	(R3),#',
	BNE	L7
	INC	R3
	TRAP	113
	.WORD	RWLINE
	.BYTE	2,2
SYNER3:	TRAP	2
	ADD	R5,PC
	BR	L8
	MOV	#BOXSET,(R1)+
	BR	L9
L7:	MOV	#LSET,(R1)+
	BR	L9
L8:	MOV	#RECSET,(R1)+
L9:	TST	R2
	BNE	10$
	MOV	#COLRET,(R1)+
10$:	TRAP	106
	RETURN
;
KOORD:	CLR	-(SP)
	CMPB	(R3)+,#'@
	BEQ	1$
	DEC	R3
	TRAP	113
	.WORD	RWFOR+3
	.BYTE	2,0
	BR	3$
1$:	INC	@SP
3$:	TRAP	127
	TRAP	124
	TRAP	130
	MOV	(SP)+,R4
	BEQ	8$
	MOV	#STP,(R1)+
8$:	RETURN
;
.IF EQ,0
DRAW::	TRAP	115
	TRAP	5
	TRAP	106
	MOV	#$DRAW,(R1)+
	RETURN
.ENDC
;
PAINT::	CALL	KOORD
	CLR	R2
	CALL	SPL
	CALL	SPL
	CMP	-(R1),#RSP
	BNE	10$
	MOV	#VIDSP,@R1
10$:	TST	(R1)+
	TRAP	106
	TST	R2
	BEQ	5$
	TRAP	24.
5$:	MOV	#$PAINT,(R1)+
	RETURN
;
SPL:	TRAP	116
	BR	1$
	CALL	CINT
	MOV	#SPFORM,(R1)+
	CLR	R2
	BR	2$
1$:	MOV	#RSP,(R1)+
	CMPB	@R3,#',
	BNE	2$
	INC	R3
	INC	R2
2$:	RETURN
;
KEY::;	TRAP	113
;	.WORD	RWKEY
;	.BYTE	2,4
;	BR	3$
;	MOV	KEYTAB(R5),(R1)+
;	BR	KEY4
3$:	TRAP	125
	CMPB	(R3)+,#',
	BNE	SYNER3
	TRAP	115
KEY3:	TRAP	13.
	MOV	#$KEY,(R1)+
KEY4:	TRAP	106
	RETURN
;KEYTAB::.WORD	KEYISV,KEYON,KEYOFF
;
.IF EQ,1
SWAP::	JSR	R2,SWARG
	TRAP	126
	JSR	R2,SWARG
	CMP	(SP)+,2(SP)
	BNE	KEY3
	MOV	(SP)+,R5
	BMI	2$
	MOVB	(SP)+,R4
	INC	R4
	ASL	R4
	MOV	SWADR(4),(1)+
	TST	(SP)+
	BR	KEY4
2$:	TST	(SP)+
	TSTB	R5
	BMI	3$
	TSTB	(SP)+
	BMI	4$
	MOV	#SWPR,(1)+
	BR	KEY4
4$:	MOV	#SWSIS,(1)+
	BR	KEY4
3$:	TSTB	(SP)+
	BMI	5$
	MOV	#SWSSI,(1)+
	BR	KEY4
5$:	MOV	#SWSII,(1)+
	BR	KEY4
;
SWARG:	TST	(SP)+
	CLR	R4
	TRAP	107
	BR	1$
3$:	TSTB	R5
	BMI	2$
	MOV	#ICONST,(1)+
	MOV	R4,(1)+
2$:	MOV	R5,-(SP)
	MOV	TYPE,-(SP)
	MOV	R2,PC
1$:	TST	R5
	BNE	3$
	TRAP	2
;
SWADR:	.WORD	SWPI
	.WORD	SWPD
	.WORD	SWPR
.ENDC
;
CIRCLE::CALL	KOORD
	TRAP	116
	TRAP	2
	CALL	CINT
	CLR	R2
	CALL	SPL
	TRAP	116
	BR	1$
	CALL	CDBL
	MOV	#ANG1,(R1)+
	CLR	R2
	BR	2$
1$:	MOV	#ANG01,(R1)+
	CMPB	@R3,#',
	BNE	2$
	INC	R3
	INC	R2
2$:	TRAP	116
	BR	3$
	CALL	CDBL
	MOV	#ANG2,(R1)+
	CLR	R2
	BR	4$
3$:	MOV	#ANG02,(R1)+
	CMPB	@R3,#',
	BNE	4$
	INC	R3
	INC	R2
4$:	TRAP	116
	BR	10$
	MOVB	TYPE,R4
	INC	R4
	ASL	R4
	MOV	7$(R4),(R1)+
	CLR	R2
	BR	6$
10$:	MOV	#ASP0,(R1)+
	CMPB	@R3,#',
	BNE	6$
	INC	R3
	INC	R2
6$:	TRAP	106
	TST	R2
	BEQ	8$
	TRAP	24.
8$:	MOV	#$ARC,(R1)+
	RETURN
7$:	.WORD	ASPINT,ASPDBL,ASPSNG
;
DEF::	TRAP	113
	.WORD	RWDEF
	.BYTE	3,2	;12 SU DEFTYP
DEFERR:	TRAP	2
DEFUSR:	TRAP	112
	TRAP	102
	BR	1$
	BR	DEFFN
	MOVB	(R3)+,R2
	SUB	#'0,R2
	ASL	R2
2$:	TST	R5
	BNE	DEFERR
	ADD	#USRTAB,R2
	TRAP	112
	CMPB	(R3)+,#'=
	BNE	DEFERR
	TRAP	125
	TRAP	106
	MOV	#$DEFUS,(R1)+
	MOV	R2,(R1)+
	RETURN
1$:	CLR	R2
	BR	2$
;
DEFFN:	TST	R5		;SUB #2 SU DEFTYP
	BEQ	DEFERR		;BMI	SU DEFTYP
;	BGT	DEFTYP		;	SU DEFTYP
	TSTB	LYGIS
	BNE	11$
	TRAP	12.
11$:	MOV	#DFN,(R1)+
	MOV	R0,-(SP)
	MOV	R1,-(SP)
	TST	(R1)+
	TRAP	105
	TRAP	2
	TRAP	2
	NOP
	BIS	#100100,R5
	MOV	TYPE,R0
	MOV	#-1,TYPE
	TRAP	104
	MOV	R4,(R1)+
	TST	(R4)+
	MOV	R4,-(SP)
	CLR	R2
	CLR	-(SP)
	CMPB	@R3,#'(
	BNE	6$
1$:	INC	R3
	TRAP	102
	TRAP	2
	BR	3$
2$:	TRAP	2
3$:	TRAP	105
	TRAP	2
	TRAP	2
	NOP
	MOV	@SP,R4
	MOV	R5,-(SP)
	BMI	4$
	ROL	R5
	BMI	5$
	ROL	R5
	BMI	4$
	CMP	(R4)+,(R4)+
4$:	TST	(R4)+
5$:	TST	(R4)+
	MOV	TYPE,-(SP)
	MOV	R4,-(SP)
	INC	R2
	TRAP	112
	CMPB	@R3,#',
	BEQ	1$
	TRAP	130
6$:	MOV	R2,(R1)+
	CMPB	(R3)+,#'=
	BNE	2$
	MOV	SP,PFACT
	MOV	R1,-(SP)
	ASL	R2
	ADD	R2,R1
	INC	TMP
	TST	R0
	BPL	7$
	TRAP	115
	TRAP	13.
	MOV	#4,R0
	TST	R4
	BNE	8$
	MOV	#NEWSTR,(1)+
	BR	8$
7$:	TRAP	100
	MOVB	R0,R0
	INC	R0
	ASL	R0
	CALL	@ATCONV(R0)
8$:	CLR	PFACT
	MOV	(SP)+,R4
9$:	TST	(SP)+
	BEQ	10$
	MOV	(SP)+,(R4)+
	TST	(SP)+
	BR	9$
10$:	MOV	ARET(R0),(R1)+
	MOV	(SP)+,(R1)+
	MOV	R1,@(SP)+
	MOV	(SP)+,R0
	TRAP	106
	RETURN
ARET:	.WORD	IFNRET,DFNRET,SFNRET
;
.IF EQ,1
DEFTYP:	TST	-(R5)
10$:	TRAP	102
	TRAP	2
	BR	1$
	TRAP	2
1$:	MOVB	(R3)+,R2
	TRAP	112
	CMPB	@R3,#'-
	BNE	2$
	INC	R3
	TRAP	102
	TRAP	2
	BR	3$
	TRAP	2
3$:	INC	R3
	TRAP	112
2$:	SUB	R2,R4
	INC	R4
	BLOS	8$
5$:	ADD	#APRL-'A,R2
6$:	MOVB	R5,(R2)+
	SOB	R4,6$
	CMPB	(R3)+,#',
	BEQ	10$
	DEC	R3
	TRAP	106
	RETURN
8$:	TRAP	5
;
.ENDC
;
SUM2::	.WORD	0
;
ON::	TRAP	100
	CALL	CINT
	TRAP	113
	.WORD	RWON
	.BYTE	3,2
	TRAP	2
	MOV	ADRON(R5),(R1)+
	MOV	R0,-(SP)
	CLR	R0
	CLR	R2
	MOV	R1,-(SP)
	TST	(R1)+
1$:	CALL	TO
	INC	R2
	TRAP	112
	CMPB	(R3)+,#',
	BEQ	1$
	DEC	R3
	MOV	R2,@(SP)+
	MOV	(SP)+,R0
	TRAP	106
	RETURN
;
ADRON:	.WORD	ONJSR,ONJMP
;
OPEN::	TRAP	115
	TRAP	56.
	CLR	R2
	TRAP	113
	.WORD	OPFOR
	.BYTE	3,0
	BR	1$
	TRAP	113
	.WORD	RWOPEN
	.BYTE	6,2
	TRAP	2
	MOV	R5,R2
1$:
;	TRAP	113
;	.WORD	RWOPEN+13.
;	.BYTE	2,0
;	BR	2$
;	CALL	FILNUM
;	BR	3$
;2$:	MOV	#ICONST,(R1)+
;	MOV	#1,(R1)+
;
3$:	TRAP	106
	MOV	OP(R2),(R1)+
	RETURN
;
OP:	.WORD	OPOUT,OPINP
;
CLOSE::	
;	CLR	R2
;	CMPB	@R3,#12
;	BEQ	2$
;1$:	CALL	FILNUM
;	INC	R2
;	CMPB	(R3)+,#',
;	BEQ	1$
;	DEC	R3
;
2$:	TRAP	106
	MOV	#CLOFIL,(R1)+
;	MOV	R2,(R1)+
	RETURN
;
;FILNUM:	TRAP	112
;	CMPB	@R3,#'#
;	BNE	1$
;	INC	R3
;1$:
;	TRAP	100
;	CALL	CINT
;	RETURN
;
TSTFLN:	CLR	@SP
	CMPB	@R3,#'#
	BNE	1$
	DEC	@SP
	INC	R3
;	CALL	FILNUM
;	TRAP	126
	MOV	#DEVICE,(R1)+
1$:	MOV	R2,PC
;1$:	MOV	#INIPRP,(1)+	;PRINT SKAITIKLIS...
;	MOV	R2,PC
;
TSTFIL:	TST	(SP)+
	TST	@SP
	BEQ	1$
	MOV	#CLRDEV,(R1)+
1$:	RTS	R2
;
CALL::	MOV	#USEROM,(1)+
	MOV	R3,(1)+
	RETURN
;
	.END
